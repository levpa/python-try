name: Test/Build/Push to GHCR

on:
  push:
    tags:
      - "v*"

permissions:
  contents: read
  packages: write
  pull-requests: read

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v6
        with:
          python-version: "3.13"

      - name: Install python tools and project deps
        run: |
          python -m pip install --upgrade pip
          pip install ruff mypy pytest
          pip install -r src/requirements.txt

      - name: tests, checks, verifications
        run: |
          make verify lint test check-build
          make version-inject

      - name: ðŸš€ Extract version metadata from version.py
        id: meta
        run: |
          eval $(awk -F= '{gsub(/'\''/, "", $2); gsub(/^ +| +$$/, "", $2); \
            gsub(/ /, "", $1); print $1"=\"" $2 "\"" }' src/version.py)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "COMMIT=$COMMIT" >> $GITHUB_OUTPUT
          echo "DATE=$BUILD_DATE" >> $GITHUB_OUTPUT
          echo "REPO=https://github.com/${{ github.repository }}" >> $GITHUB_OUTPUT
          echo "REGISTRY=ghcr.io/levpa/python-try" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.REGISTRY }}:${{ steps.meta.outputs.VERSION }},${{ steps.meta.outputs.REGISTRY }}:latest
          cache-from: type=registry,ref=${{ steps.meta.outputs.REGISTRY }}:buildcache
          cache-to: type=registry,ref=${{ steps.meta.outputs.REGISTRY }}:buildcache,mode=max
          labels: |
            org.opencontainers.image.source=${{ steps.meta.outputs.REPO }}
            org.opencontainers.image.version=${{ steps.meta.outputs.VERSION }}
            org.opencontainers.image.revision=${{ steps.meta.outputs.COMMIT }}
            org.opencontainers.image.created=${{ steps.meta.outputs.DATE }}
